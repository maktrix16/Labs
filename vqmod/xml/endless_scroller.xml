<modification>

    <id>Add endless product scrolling to category and search pages</id>
    <version>1.6.1</version>
    <vqmver>2.3.2</vqmver>
    <author>bull5-i</author>

    <file name="catalog/controller/common/maintenance.php">
        <operation error="log">
            <ignoreif><![CDATA[
            // AJAX REQUEST CHECK
            ]]></ignoreif>
            <search position="after"><![CDATA[
            public function info()
            ]]></search>
            <add><![CDATA[
        // AJAX REQUEST CHECK
        $ajax_request = isset($this->request->server['HTTP_X_REQUESTED_WITH']) && !empty($this->request->server['HTTP_X_REQUESTED_WITH']) && strtolower($this->request->server['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest';
        if ($ajax_request) {
            $json = array();

            $json['error'] = 1;
            $json['error_type'] = "maintenance";

            $this->response->setOutput(json_encode($json));

            return;
        }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/product/" name="category.php,search.php,manufacturer.php,special.php">
        <operation>
            <search position="before"><![CDATA[
            $this->data['breadcrumbs'] = array();
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('endless_scroller_status')) {
                $pages = 0;
                $end_page = isset($page) ? $page : 1;
                if (!isset($this->request->get['page']) && isset($this->request->get['pages'])) {
                    if (strpos($this->request->get['pages'], "-")) {
                        $span = explode("-", $this->request->get['pages']);
                        if (count($span) == 2) {
                            list($page, $end_page) = $span;
                        }
                    } else {
                        $page = 1;
                        $end_page = $this->request->get['pages'];
                    }
                    if ((int)$end_page > (int)$page) {
                        if (($end_page - $page + 1) * $limit > (int)$this->config->get('es_max_items_per_load')) {
                            $end_page = floor(((int)$this->config->get('es_max_items_per_load') / $limit) - 1 + $page);
                        }
                        $pages = $end_page - $page;
                        $limit = ($end_page - $page + 1) * $limit;
                    } else {
                        $page = 1;
                    }
                }
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $product_total = $this->model_catalog_product->getTotalProduct
            ]]></search>
            <add><![CDATA[
            if ($this->config->get('endless_scroller_status')) {
                $_limit = (isset($this->request->get['limit'])) ? $this->request->get['limit'] : $this->config->get('config_catalog_limit');
                $data['start'] = ($page - 1) * $_limit;
            }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/category.php">
        <operation>
            <search position="before"><![CDATA[
            $results = $this->model_catalog_product->getProducts($data);
            ]]></search>
            <add><![CDATA[
            $this->data['es_status'] = $this->config->get('endless_scroller_status');
            if ($this->config->get('endless_scroller_status')) {
                $url = '';

                if (isset($this->request->get['filter'])) {
                    $url .= '&filter=' . $this->request->get['filter'];
                }

                if (isset($this->request->get['sort'])) {
                    $url .= '&sort=' . $this->request->get['sort'];
                }

                if (isset($this->request->get['order'])) {
                    $url .= '&order=' . $this->request->get['order'];
                }

                if (isset($this->request->get['limit'])) {
                    $url .= '&limit=' . $this->request->get['limit'];
                }

                $page = ($page > 0) ? $page : 1;
                $current_page = (($page + $pages) * $_limit > $product_total) ? ceil($product_total / $_limit) : $page + $pages;
                $this->data['text_more_results'] = $this->language->get('text_more_results');
                $this->data['text_showing'] = $this->language->get('text_showing');
                $this->data['text_loading'] = $this->language->get('text_loading');
                $this->data['bottom_pixels'] = $this->config->get('es_bottom_pixels');
                $this->data['use_fade_in'] = $this->config->get('es_use_fade_in');
                $this->data['start_page'] = $page;
                $this->data['current_page'] = $current_page;
                //$this->data['next_page_link'] = html_entity_decode($this->url->link('product/category/next_page', 'path=' . $this->request->get['path'] . $url . '&page=')); // SEO URLs do not work here, because the URL library does not create a valid link
                $this->data['next_page_link'] = html_entity_decode('index.php?route=product/category/next_page&path=' . $this->request->get['path'] . $url . '&page=');
                $this->data['total_products'] = $product_total;
                $this->data['page_limit'] = $_limit;
                $this->data['use_more'] = $this->config->get('es_use_more');
                $this->data['use_more_after'] = $this->config->get('es_use_more_after');
                $this->data['auto_load_counter'] = ($current_page - 1) % ((int)$this->config->get('es_use_more_after') + 1);
                $this->data['use_back_top'] = $this->config->get('es_use_back_to_top');
                $this->data['use_sticky_footer'] = $this->config->get('es_use_sticky_footer');
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function index()
            ]]></search>
            <add><![CDATA[
    public function next_page() {
        $this->language->load('product/category');

        $this->load->model('catalog/category');

        $this->load->model('catalog/product');

        $this->load->model('tool/image');

        if (isset($this->request->get['filter'])) {
            $filter = $this->request->get['filter'];
        } else {
            $filter = '';
        }

        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = 'p.sort_order';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        if (isset($this->request->get['limit'])) {
            $limit = $this->request->get['limit'];
        } else {
            $limit = $this->config->get('config_catalog_limit');
        }

        if (isset($this->request->get['path'])) {
            $path = '';

            $parts = explode('_', (string)$this->request->get['path']);

            $category_id = array_pop($parts);
        } else {
            $category_id = 0;
        }

        $category_info = $this->model_catalog_category->getCategory($category_id);

        if ($category_info) {
            $url = '';

            if (isset($this->request->get['filter'])) {
                $url .= '&filter=' . $this->request->get['filter'];
            }

            if (isset($this->request->get['sort'])) {
                $url .= '&sort=' . $this->request->get['sort'];
            }

            if (isset($this->request->get['order'])) {
                $url .= '&order=' . $this->request->get['order'];
            }

            if (isset($this->request->get['limit'])) {
                $url .= '&limit=' . $this->request->get['limit'];
            }

            $this->data['text_tax'] = $this->language->get('text_tax');

            $this->data['button_cart'] = $this->language->get('button_cart');
            $this->data['button_wishlist'] = $this->language->get('button_wishlist');
            $this->data['button_compare'] = $this->language->get('button_compare');

            $this->data['cit_status'] = $this->config->get('custom_image_titles_status');

            $this->data['products'] = array();

            $data = array(
                'filter_category_id' => $category_id,
                'filter_filter'      => $filter,
                'sort'               => $sort,
                'order'              => $order,
                'start'              => ($page - 1) * $limit,
                'limit'              => $limit
            );

            $results = $this->model_catalog_product->getProducts($data);

            foreach ($results as $result) {
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));
                } else {
                    $image = false;
                }

                if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
                    $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $price = false;
                }

                if ((float)$result['special']) {
                    $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $special = false;
                }

                if ($this->config->get('config_tax')) {
                    $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price']);
                } else {
                    $tax = false;
                }

                if ($this->config->get('config_review_status')) {
                    $rating = (int)$result['rating'];
                } else {
                    $rating = false;
                }

                $this->data['products'][] = array(
                        'product_id'  => $result['product_id'],
                        'thumb'       => $image,
                        'image_alt'   => isset($result['alt_text']) ? $result['alt_text'] : '',
                        'image_title' => isset($result['title_text']) ? $result['title_text'] : '',
                        'name'        => $result['name'],
                        'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',
                        'brand'       => $result['manufacturer'],
                        'price'       => $price,
                        'special'     => $special,
                        'stock_status' =>$result['stock_status'],
                        'tax'         => $tax,
                        'rating'      => $result['rating'],
                        'reviews'     => sprintf($this->language->get('text_reviews'), (int)$result['reviews']),
                        'href'        => $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id'] . $url)
                );
            }

            if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/product/category_products.tpl')) {
                $this->template = $this->config->get('config_template') . '/template/product/category_products.tpl';
            } else {
                $this->template = 'thebabyshop/template/product/category_products.tpl';
            }

            $resp = array("success" => 1, "data" => $this->render());

            $this->response->setOutput(json_encode($resp));
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/search.php">
        <operation>
            <search position="before"><![CDATA[
            $results = $this->model_catalog_product->getProducts($data);
            ]]></search>
            <add><![CDATA[
            $this->data['es_status'] = $this->config->get('endless_scroller_status');
            if ($this->config->get('endless_scroller_status')) {
                $url = '';

                if (isset($this->request->get['search'])) {
                    $url .= '&search=' . urlencode(html_entity_decode($this->request->get['search'], ENT_QUOTES, 'UTF-8'));
                }

                if (isset($this->request->get['tag'])) {
                    $url .= '&tag=' . urlencode(html_entity_decode($this->request->get['tag'], ENT_QUOTES, 'UTF-8'));
                }

                if (isset($this->request->get['description'])) {
                    $url .= '&description=' . $this->request->get['description'];
                }

                if (isset($this->request->get['category_id'])) {
                    $url .= '&category_id=' . $this->request->get['category_id'];
                }

                if (isset($this->request->get['sub_category'])) {
                    $url .= '&sub_category=' . $this->request->get['sub_category'];
                }

                if (isset($this->request->get['sort'])) {
                    $url .= '&sort=' . $this->request->get['sort'];
                }

                if (isset($this->request->get['order'])) {
                    $url .= '&order=' . $this->request->get['order'];
                }

                if (isset($this->request->get['limit'])) {
                    $url .= '&limit=' . $this->request->get['limit'];
                }

                $page = ($page > 0) ? $page : 1;
                $current_page = (($page + $pages) * $_limit > $product_total) ? ceil($product_total / $_limit) : $page + $pages;
                $this->data['text_more_results'] = $this->language->get('text_more_results');
                $this->data['text_showing'] = $this->language->get('text_showing');
                $this->data['text_loading'] = $this->language->get('text_loading');
                $this->data['bottom_pixels'] = $this->config->get('es_bottom_pixels');
                $this->data['use_fade_in'] = $this->config->get('es_use_fade_in');
                $this->data['start_page'] = $page;
                $this->data['current_page'] = $current_page;
                //$this->data['next_page_link'] = html_entity_decode($this->url->link('product/search/next_page', $url . '&page='));
                $this->data['next_page_link'] = html_entity_decode('index.php?route=product/search/next_page' . $url . '&page=');
                $this->data['total_products'] = $product_total;
                $this->data['page_limit'] = $_limit;
                $this->data['use_more'] = $this->config->get('es_use_more');
                $this->data['use_more_after'] = $this->config->get('es_use_more_after');
                $this->data['auto_load_counter'] = ($current_page - 1) % ((int)$this->config->get('es_use_more_after') + 1);
                $this->data['use_back_top'] = $this->config->get('es_use_back_to_top');
                $this->data['use_sticky_footer'] = $this->config->get('es_use_sticky_footer');
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function index()
            ]]></search>
            <add><![CDATA[
    public function next_page() {
        $this->language->load('product/search');

        $this->load->model('catalog/category');

        $this->load->model('catalog/product');

        $this->load->model('tool/image');

        if (isset($this->request->get['search'])) {
            $search = $this->request->get['search'];
        } else {
            $search = '';
        }

        if (isset($this->request->get['tag'])) {
            $tag = $this->request->get['tag'];
        } elseif (isset($this->request->get['search'])) {
            $tag = $this->request->get['search'];
        } else {
            $tag = '';
        }

        if (isset($this->request->get['description'])) {
            $description = $this->request->get['description'];
        } else {
            $description = '';
        }

        if (isset($this->request->get['category_id'])) {
            $category_id = $this->request->get['category_id'];
        } else {
            $category_id = 0;
        }

        if (isset($this->request->get['sub_category'])) {
            $sub_category = $this->request->get['sub_category'];
        } else {
            $sub_category = '';
        }

        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = 'p.sort_order';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        if (isset($this->request->get['limit'])) {
            $limit = $this->request->get['limit'];
        } else {
            $limit = $this->config->get('config_catalog_limit');
        }

        $url = '';

        if (isset($this->request->get['search'])) {
            $url .= '&search=' . urlencode(html_entity_decode($this->request->get['search'], ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['tag'])) {
            $url .= '&tag=' . urlencode(html_entity_decode($this->request->get['tag'], ENT_QUOTES, 'UTF-8'));
        }

        if (isset($this->request->get['description'])) {
            $url .= '&description=' . $this->request->get['description'];
        }

        if (isset($this->request->get['category_id'])) {
            $url .= '&category_id=' . $this->request->get['category_id'];
        }

        if (isset($this->request->get['sub_category'])) {
            $url .= '&sub_category=' . $this->request->get['sub_category'];
        }

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        if (isset($this->request->get['page'])) {
            $url .= '&page=' . $this->request->get['page'];
        }

        if (isset($this->request->get['limit'])) {
            $url .= '&limit=' . $this->request->get['limit'];
        }

        if (isset($this->request->get['search']) || isset($this->request->get['tag'])) {
            $this->data['text_tax'] = $this->language->get('text_tax');

            $this->data['cit_status'] = $this->config->get('custom_image_titles_status');

            $this->data['products'] = array();

            $data = array(
                'filter_name'         => $search,
                'filter_tag'          => $tag,
                'filter_description'  => $description,
                'filter_category_id'  => $category_id,
                'filter_sub_category' => $sub_category,
                'sort'                => $sort,
                'order'               => $order,
                'start'               => ($page - 1) * $limit,
                'limit'               => $limit
            );

            $results = $this->model_catalog_product->getProducts($data);

            foreach ($results as $result) {
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));
                } else {
                    $image = false;
                }

                if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
                    $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $price = false;
                }

                if ((float)$result['special']) {
                    $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $special = false;
                }

                if ($this->config->get('config_tax')) {
                    $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price']);
                } else {
                    $tax = false;
                }

                if ($this->config->get('config_review_status')) {
                    $rating = (int)$result['rating'];
                } else {
                    $rating = false;
                }

                $this->data['products'][] = array(
                    'product_id'  => $result['product_id'],
                    'thumb'       => $image,
                    'image_alt'   => isset($result['alt_text']) ? $result['alt_text'] : '',
                    'image_title' => isset($result['title_text']) ? $result['title_text'] : '',
                    'name'        => $result['name'],
                    'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',
                    'brand'       => $result['manufacturer'],
                    'price'       => $price,
                    'stock_status' =>$result['stock_status'],
                    'special'     => $special,
                    'tax'         => $tax,
                    'rating'      => $result['rating'],
                    'reviews'     => sprintf($this->language->get('text_reviews'), (int)$result['reviews']),
                    'href'        => $this->url->link('product/product', '&product_id=' . $result['product_id'] . $url)
                );
            }

            if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/product/search_products.tpl')) {
                $this->template = $this->config->get('config_template') . '/template/product/search_products.tpl';
            } else {
                $this->template = 'thebabyshop/template/product/search_products.tpl';
            }

            $resp = array("success" => 1, "data" => $this->render());

            $this->response->setOutput(json_encode($resp));
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/manufacturer.php">
        <operation>
            <search position="before"><![CDATA[
            $results = $this->model_catalog_product->getProducts($data);
            ]]></search>
            <add><![CDATA[
            $this->data['es_status'] = $this->config->get('endless_scroller_status');
            if ($this->config->get('endless_scroller_status')) {
                $url = '';

                if (isset($this->request->get['sort'])) {
                    $url .= '&sort=' . $this->request->get['sort'];
                }

                if (isset($this->request->get['order'])) {
                    $url .= '&order=' . $this->request->get['order'];
                }

                if (isset($this->request->get['limit'])) {
                    $url .= '&limit=' . $this->request->get['limit'];
                }

                $page = ($page > 0) ? $page : 1;
                $current_page = (($page + $pages) * $_limit > $product_total) ? ceil($product_total / $_limit) : $page + $pages;
                $this->data['text_more_results'] = $this->language->get('text_more_results');
                $this->data['text_showing'] = $this->language->get('text_showing');
                $this->data['text_loading'] = $this->language->get('text_loading');
                $this->data['bottom_pixels'] = $this->config->get('es_bottom_pixels');
                $this->data['use_fade_in'] = $this->config->get('es_use_fade_in');
                $this->data['start_page'] = $page;
                $this->data['current_page'] = $current_page;
                //$this->data['next_page_link'] = html_entity_decode($this->url->link('product/manufacturer/next_page', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page='));
                $this->data['next_page_link'] = html_entity_decode('index.php?route=product/manufacturer/next_page&manufacturer_id=' . $this->request->get['manufacturer_id'] . $url . '&page=');
                $this->data['total_products'] = $product_total;
                $this->data['page_limit'] = $_limit;
                $this->data['use_more'] = $this->config->get('es_use_more');
                $this->data['use_more_after'] = $this->config->get('es_use_more_after');
                $this->data['auto_load_counter'] = ($current_page - 1) % ((int)$this->config->get('es_use_more_after') + 1);
                $this->data['use_back_top'] = $this->config->get('es_use_back_to_top');
                $this->data['use_sticky_footer'] = $this->config->get('es_use_sticky_footer');
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function index()
            ]]></search>
            <add><![CDATA[
    public function next_page() {
        $this->language->load('product/manufacturer');

        $this->load->model('catalog/manufacturer');

        $this->load->model('catalog/product');

        $this->load->model('tool/image');

        if (isset($this->request->get['manufacturer_id'])) {
            $manufacturer_id = (int)$this->request->get['manufacturer_id'];
        } else {
            $manufacturer_id = 0;
        }

        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = 'p.sort_order';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        if (isset($this->request->get['limit'])) {
            $limit = $this->request->get['limit'];
        } else {
            $limit = $this->config->get('config_catalog_limit');
        }

        $manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($manufacturer_id);

        if ($manufacturer_info) {
            $url = '';

            if (isset($this->request->get['sort'])) {
                $url .= '&sort=' . $this->request->get['sort'];
            }

            if (isset($this->request->get['order'])) {
                $url .= '&order=' . $this->request->get['order'];
            }

            if (isset($this->request->get['page'])) {
                $url .= '&page=' . $this->request->get['page'];
            }

            if (isset($this->request->get['limit'])) {
                $url .= '&limit=' . $this->request->get['limit'];
            }

            $this->data['text_tax'] = $this->language->get('text_tax');

            $this->data['button_cart'] = $this->language->get('button_cart');
            $this->data['button_wishlist'] = $this->language->get('button_wishlist');
            $this->data['button_compare'] = $this->language->get('button_compare');

            $this->data['cit_status'] = $this->config->get('custom_image_titles_status');

            $this->data['products'] = array();

            $data = array(
                'filter_manufacturer_id'    => $manufacturer_id,
                'sort'                      => $sort,
                'order'                     => $order,
                'start'                     => ($page - 1) * $limit,
                'limit'                     => $limit
            );

            $results = $this->model_catalog_product->getProducts($data);

            foreach ($results as $result) {
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));
                } else {
                    $image = false;
                }

                if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
                    $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $price = false;
                }

                if ((float)$result['special']) {
                    $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));
                } else {
                    $special = false;
                }

                if ($this->config->get('config_tax')) {
                    $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price']);
                } else {
                    $tax = false;
                }

                if ($this->config->get('config_review_status')) {
                    $rating = (int)$result['rating'];
                } else {
                    $rating = false;
                }

                $this->data['products'][] = array(
                    'product_id'  => $result['product_id'],
                    'thumb'       => $image,
                    'image_alt'   => isset($result['alt_text']) ? $result['alt_text'] : '',
                    'image_title' => isset($result['title_text']) ? $result['title_text'] : '',
                    'name'        => $result['name'],
                    'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',
                    'brand'       => $result['manufacturer'],
                    'stock_status' =>$result['stock_status'],
                    'price'       => $price,
                    'special'     => $special,
                    'tax'         => $tax,
                    'rating'      => $result['rating'],
                    'reviews'     => sprintf($this->language->get('text_reviews'), (int)$result['reviews']),
                    'href'        => $this->url->link('product/product', '&manufacturer_id=' . $result['manufacturer_id'] . '&product_id=' . $result['product_id'] .  $url)
                );
            }

            if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/product/manufacturer_products.tpl')) {
                $this->template = $this->config->get('config_template') . '/template/product/manufacturer_products.tpl';
            } else {
                $this->template = 'thebabyshop/template/product/manufacturer_products.tpl';
            }

            $resp = array("success" => 1, "data" => $this->render());

            $this->response->setOutput(json_encode($resp));
        }
    }
            ]]></add>
        </operation>
    </file>

    <file name="catalog/controller/product/special.php">
        <operation>
            <search position="before"><![CDATA[
            $results = $this->model_catalog_product->getProductSpecials($data);
            ]]></search>
            <add><![CDATA[
            $this->data['es_status'] = $this->config->get('endless_scroller_status');
            if ($this->config->get('endless_scroller_status')) {
                $url = '';

                if (isset($this->request->get['sort'])) {
                    $url .= '&sort=' . $this->request->get['sort'];
                }

                if (isset($this->request->get['order'])) {
                    $url .= '&order=' . $this->request->get['order'];
                }

                if (isset($this->request->get['limit'])) {
                    $url .= '&limit=' . $this->request->get['limit'];
                }

                $page = ($page > 0) ? $page : 1;
                $current_page = (($page + $pages) * $_limit > $product_total) ? ceil($product_total / $_limit) : $page + $pages;
                $this->data['text_more_results'] = $this->language->get('text_more_results');
                $this->data['text_showing'] = $this->language->get('text_showing');
                $this->data['text_loading'] = $this->language->get('text_loading');
                $this->data['bottom_pixels'] = $this->config->get('es_bottom_pixels');
                $this->data['use_fade_in'] = $this->config->get('es_use_fade_in');
                $this->data['start_page'] = $page;
                $this->data['current_page'] = $current_page;
                //$this->data['next_page_link'] = html_entity_decode($this->url->link('product/special/next_page', $url . '&page=')); // SEO URLs do not work here, because the URL library does not create a valid link
                $this->data['next_page_link'] = html_entity_decode('index.php?route=product/special/next_page' . $url . '&page=');
                $this->data['total_products'] = $product_total;
                $this->data['page_limit'] = $_limit;
                $this->data['use_more'] = $this->config->get('es_use_more');
                $this->data['use_more_after'] = $this->config->get('es_use_more_after');
                $this->data['auto_load_counter'] = ($current_page - 1) % ((int)$this->config->get('es_use_more_after') + 1);
                $this->data['use_back_top'] = $this->config->get('es_use_back_to_top');
                $this->data['use_sticky_footer'] = $this->config->get('es_use_sticky_footer');
            }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function index()
            ]]></search>
            <add><![CDATA[
    public function next_page() {
        $this->language->load('product/special');

        $this->load->model('catalog/product');

        $this->load->model('tool/image');

        if (isset($this->request->get['sort'])) {
            $sort = $this->request->get['sort'];
        } else {
            $sort = 'p.sort_order';
        }

        if (isset($this->request->get['order'])) {
            $order = $this->request->get['order'];
        } else {
            $order = 'ASC';
        }

        if (isset($this->request->get['page'])) {
            $page = $this->request->get['page'];
        } else {
            $page = 1;
        }

        if (isset($this->request->get['limit'])) {
            $limit = $this->request->get['limit'];
        } else {
            $limit = $this->config->get('config_catalog_limit');
        }

        $url = '';

        if (isset($this->request->get['sort'])) {
            $url .= '&sort=' . $this->request->get['sort'];
        }

        if (isset($this->request->get['order'])) {
            $url .= '&order=' . $this->request->get['order'];
        }

        if (isset($this->request->get['limit'])) {
            $url .= '&limit=' . $this->request->get['limit'];
        }

        $this->data['text_tax'] = $this->language->get('text_tax');

        $this->data['button_cart'] = $this->language->get('button_cart');
        $this->data['button_wishlist'] = $this->language->get('button_wishlist');
        $this->data['button_compare'] = $this->language->get('button_compare');

        $this->data['cit_status'] = $this->config->get('custom_image_titles_status');

        $this->data['products'] = array();

        $data = array(
            'sort'               => $sort,
            'order'              => $order,
            'start'              => ($page - 1) * $limit,
            'limit'              => $limit
        );

        $results = $this->model_catalog_product->getProductSpecials($data);

        foreach ($results as $result) {
            if ($result['image']) {
                $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));
            } else {
                $image = false;
            }

            if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
                $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));
            } else {
                $price = false;
            }

            if ((float)$result['special']) {
                $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));
            } else {
                $special = false;
            }

            if ($this->config->get('config_tax')) {
                $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price']);
            } else {
                $tax = false;
            }

            if ($this->config->get('config_review_status')) {
                $rating = (int)$result['rating'];
            } else {
                $rating = false;
            }

            $this->data['products'][] = array(
                'product_id'  => $result['product_id'],
                'thumb'       => $image,
                'image_alt'   => isset($result['alt_text']) ? $result['alt_text'] : '',
                'image_title' => isset($result['title_text']) ? $result['title_text'] : '',
                'name'        => $result['name'],
                'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',
                'brand'       => $result['manufacturer'],
                'price'       => $price,
                'stock_status' =>$result['stock_status'],
                'special'     => $special,
                'tax'         => $tax,
                'rating'      => $result['rating'],
                'reviews'     => sprintf($this->language->get('text_reviews'), (int)$result['reviews']),
                'href'        => $this->url->link('product/product', '&product_id=' . $result['product_id'] . $url)
            );
        }

        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/product/special_products.tpl')) {
            $this->template = $this->config->get('config_template') . '/template/product/special_products.tpl';
        } else {
            $this->template = 'thebabyshop/template/product/special_products.tpl';
        }

        $resp = array("success" => 1, "data" => $this->render());

        $this->response->setOutput(json_encode($resp));
    }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/language/english/product/" name="category.php,search.php,manufacturer.php,special.php">
        <operation>
            <search position="after"><![CDATA[
            $_['text_limit']
            ]]></search>
            <add><![CDATA[
$_['text_showing']      = 'Showing products {start} to {end} of {total}';
$_['text_loading']      = 'Loading products {start} to {end} of {total}';
$_['text_more_results'] = 'Show more results';
            ]]></add>
        </operation>
    </file>

    <file name="catalog/view/theme/thebabyshop/template/common/header.tpl">
        <operation>
            <search position="before"><![CDATA[
            </head>
            ]]></search>
            <add><![CDATA[
<?php if ($this->config->get('endless_scroller_status')) { ?>
<style type="text/css">
.el-oc{position:relative;}
<?php if ($this->config->get('es_use_sticky_footer')) { ?>#el-oc-cl{height:30px;background:#fff;display:none;margin: 0 auto;}.sticky-ftr{position:fixed;bottom:0;z-index:1000;width:980px;}<?php } ?>
.el-c{width:100%;height:100%;position:absolute;top:0;left:0;text-align:center;padding:5px 10px;display:none;}
.el-t{background-image:url('catalog/view/theme/thebabyshop/image/loading_circle.gif');background-position:0 50%;background-repeat:no-repeat;color:#999999;font-size:20px;padding-left:34px;text-decoration:none;}
.el-d{float:right;display:none;}
<?php if ($this->config->get('es_use_more')) { ?>.el-md{text-align:center;height:30px;width:100%;position:absolute;top:0;left:0;margin:5px 0;display:none;}
.el-m{background:-webkit-gradient(linear,left top,left bottom,color-stop(0.05,#ffffff),color-stop(1,#f6f6f6));background:-moz-linear-gradient(center top,#ffffff 5%,#f6f6f6 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff',endColorstr='#f6f6f6');background-color:#ffffff;-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;border:1px solid #dcdcdc;display:inline-block;color:#666666;font-family:arial;font-size:15px;font-weight:bold;padding:6px 63px;text-decoration:none;text-shadow:1px 1px 0px #ffffff;width:250px !important;}
.el-m:hover{box-shadow:0 1px 1px rgba(0,0,0,0.1);}
.el-m:active{background:-webkit-gradient(linear,left top,left bottom,color-stop(0.05,#f6f6f6),color-stop(1,#ffffff));background:-moz-linear-gradient(center top,#f6f6f6 5%,#ffffff 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6',endColorstr='#ffffff');background-color:#f6f6f6;}<?php } ?>
<?php if ($this->config->get('es_use_back_to_top')) { ?>#back-to-top{background:none repeat scroll 0 0 rgba(214,214,214,0.95);border-radius:5px;color:#6C6C6C;display:block;font-size:36px;opacity:0.5;padding:2px 14px;position:fixed;right:12px;bottom:12px;outline:none;text-decoration:none;margin:0;display:none;}
#back-to-top:hover{opacity:0.7;}<?php } ?>
</style>
<?php } ?>
            ]]></add>
        </operation>
    </file>

    <file path="catalog/view/theme/thebabyshop/template/product/" name="manufacturer_info.tpl,special.tpl">
        <operation>
            <search position="replace"><![CDATA[
  <div class="product-list">
            ]]></search>
            <add><![CDATA[
  <div class="product-list" id="el-s">
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            <div class="pagination"><?php echo $pagination; ?></div>
            ]]></search>
            <add><![CDATA[]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($es_status) { ?><script type="text/javascript"><!--
jQuery.query={numbers:false,spaces:false};
new function(a){var b=a.separator||"&";var c=a.spaces===false?false:true;var d=a.suffix===false?"":"[]";var e=a.prefix===false?false:true;var f=e?a.hash===true?"#":"?":"";var g=a.numbers===false?false:true;jQuery.query=new function(){var a=function(a,b){return a!=undefined&&a!==null&&(!!b?a.constructor==b:true)};var d=function(a){var b,c=/\[([^[]*)\]/g,d=/^([^[]+)(\[.*\])?$/.exec(a),e=d[1],f=[];while(b=c.exec(d[2]))f.push(b[1]);return[e,f]};var e=function(b,c,d){var f,g=c.shift();if(typeof b!="object")b=null;if(g===""){if(!b)b=[];if(a(b,Array)){b.push(c.length==0?d:e(null,c.slice(0),d))}else if(a(b,Object)){var h=0;while(b[h++]!=null);b[--h]=c.length==0?d:e(b[h],c.slice(0),d)}else{b=[];b.push(c.length==0?d:e(null,c.slice(0),d))}}else if(g&&g.match(/^\s*[0-9]+\s*$/)){var i=parseInt(g,10);if(!b)b=[];b[i]=c.length==0?d:e(b[i],c.slice(0),d)}else if(g){var i=g.replace(/^\s*|\s*$/g,"");if(!b)b={};if(a(b,Array)){var j={};for(var h=0;h<b.length;++h){j[h]=b[h]}b=j}b[i]=c.length==0?d:e(b[i],c.slice(0),d)}else{return d}return b};var h=function(a){var b=this;b.keys={};b._hash="";if(a.queryObject){jQuery.each(a.get(),function(a,c){b.SET(a,c)});b._hash=a.hash()}else{b._hash=arguments[1].replace(/^[?#]/,"");var d=""+arguments[0];d=d.replace(/^[?#]/,"");d=d.replace(/[;&]$/,"");if(c)d=d.replace(/[+]/g," ");jQuery.each(d.split(/[&;]/),function(){var a=decodeURIComponent(this.split("=")[0]||"");var c=decodeURIComponent(this.split("=")[1]||"");if(!a)return;if(g){if(/^[+-]?[0-9]+\.[0-9]*$/.test(c))c=parseFloat(c);else if(/^[+-]?[0-9]+$/.test(c))c=parseInt(c,10)}c=!c&&c!==0?true:c;if(c!==false&&c!==true&&typeof c!="number")c=c;b.SET(a,c)})}return b};h.prototype={queryObject:true,has:function(b,c){var d=this.get(b);return a(d,c)},hash:function(a){if(a){return this.copy().HASH(a)}else{return this._hash}},HASH:function(a){this._hash=a;return this},GET:function(b){if(!a(b))return this.keys;var c=d(b),e=c[0],f=c[1];var g=this.keys[e];while(g!=null&&f.length!=0){g=g[f.shift()]}return typeof g=="number"?g:g||""},get:function(b){var c=this.GET(b);if(a(c,Object))return jQuery.extend(true,{},c);else if(a(c,Array))return c.slice(0);return c},SET:function(b,c){var f=!a(c)?null:c;var g=d(b),h=g[0],i=g[1];var j=this.keys[h];this.keys[h]=e(j,i.slice(0),f);return this},set:function(a,b){return this.copy().SET(a,b)},REMOVE:function(a){return this.SET(a,null).COMPACT()},remove:function(a){return this.copy().REMOVE(a)},EMPTY:function(){var a=this;jQuery.each(a.keys,function(b,c){delete a.keys[b]});return a},load:function(a){var b=a.replace(/^.*?[#](.+?)(?:\?.+)?$/,"$1");var c=a.replace(/^.*?[?](.+?)(?:#.+)?$/,"$1");return new h(a.length==c.length?"":c,a.length==b.length?"":b)},empty:function(){return this.copy().EMPTY()},copy:function(){return new h(this)},COMPACT:function(){function b(c){var d=typeof c=="object"?a(c,Array)?[]:{}:c;if(typeof c=="object"){function e(b,c,d){if(a(b,Array))b.push(d);else b[c]=d}jQuery.each(c,function(c,f){if(!a(f))return true;e(d,c,b(f))})}return d}this.keys=b(this.keys);return this},compact:function(){return this.copy().COMPACT()},toString:function(d){var e=0,g=[],h=[],i=this;var j=function(a){a=a+"";if(c)a=a.replace(/ /g,"+");return encodeURIComponent(a)};var k=function(b,c,e){if(!a(e)||e===false)return;var f=[j(c)];if(e!==true){f.push("=");if($.isArray(d)&&$.inArray(c,d)!=-1){f.push(e)}else{f.push(j(e))}}b.push(f.join(""))};var l=function(a,b){var c=function(a){return!b||b==""?[a].join(""):[b,"[",a,"]"].join("")};jQuery.each(a,function(a,b){if(typeof b=="object")l(b,c(a));else k(h,c(a),b)})};l(this.keys);if(h.length>0)g.push(f);g.push(h.join(b));if(this._hash){g.push("#");g.push(this._hash)}return g.join("")}};return new h(location.search,location.hash)}}(jQuery.query||{})
function updatePath(){if(!!(window.history&&history.pushState)){if(current_product){l=window.location;window.history.replaceState(null,null,path)}}}
var total_products=<?php echo $total_products; ?>;var start_page=<?php echo $start_page; ?>;var current_page=<?php echo $current_page; ?>;var page_limit=<?php echo $page_limit; ?>;var text_showing="<?php echo $text_showing; ?>";var text_loading="<?php echo $text_loading; ?>";var current_product=null;$(".el-p").hide();$(".el-d").show();
function esUpdate(e){$.ajax({type:"POST",dataType:"json",url:"<?php echo $next_page_link; ?>"+(current_page+1),beforeSend:function(){end=++current_page*page_limit>total_products?total_products:current_page*page_limit;$(".el-t").html(text_loading.replace("{start}",(current_page-1)*page_limit+1).replace("{end}",end).replace("{total}",total_products));$(".el-c").fadeIn(200)},success:function(e,t,n){if(e&&e.success&&e.data){updatePath();$("#el-s").children().attr("rel","loaded").removeAttr("style");$("#el-s").append(e.data);<?php if ($use_fade_in) { ?>$("#el-s").children("[rel!=loaded]").hide().fadeInWithDelay();<?php } ?>view=$.totalStorage("display");if(view){display(view,1)}else{display("list")}}else{if(e&&e.error&&e.error_type&&e.error_type=="maintenance"){window.location.reload()}else{if(window&&window.console&&window.console.log){window.console.log("ES.error",e,t,n)}}}},error:function(e,t,n){if(t=="parsererror"){window.location.reload()}},complete:function(t,n){$(".el-c").fadeOut(200);end=current_page*page_limit>total_products?total_products:current_page*page_limit;$(".el-d").html(text_showing.replace("{start}",(start_page-1)*page_limit+1).replace("{end}",end).replace("{total}",total_products));if($.isFunction(e)){e.call()}}})}
<?php if (!$use_more) { ?>
(function(a){a.fn.endlessScroll=function(b){var c={bottomPixels:400,fireOnce:true,fireDelay:0,contentTarget:"",callback:function(){return true},resetCounter:function(){return false},ceaseFire:function(){return false},intervalFrequency:250};var b=a.extend({},c,b),d=false,e=0,f=false,g=this,h=a(".endless_scroll_inner_wrap",this),i;a(this).scroll(function(){f=true;g=this});setInterval(function(){if(f){f=false;if(b.ceaseFire.apply(g,[e])===true){return}if(g==document||g==window){if(b.contentTarget!=""&&a(b.contentTarget).length){i=a(b.contentTarget).offset().top+a(b.contentTarget).height()-a(window).height()<=a(window).scrollTop()+b.bottomPixels}else{i=a(document).height()-a(window).height()<=a(window).scrollTop()+b.bottomPixels}}else{if(h.length==0){h=a(g).wrapInner('<div class="endless_scroll_inner_wrap" />').find(".endless_scroll_inner_wrap")}i=h.length>0&&h.height()-a(g).height()<=a(g).scrollTop()+b.bottomPixels}if(i&&(b.fireOnce==false||b.fireOnce==true&&d!=true)){if(b.resetCounter.apply(g)===true){e=0}d=true;e++;if(a.isFunction(b.beforeLoad)){b.beforeLoad.apply(g,[e])}b.callback.apply(g,[e,function(){if(b.fireDelay!==false||b.fireDelay!==0){setTimeout(function(){d=false},b.fireDelay)}else{d=false}}])}}},b.intervalFrequency)}})(jQuery)
$(window).endlessScroll({contentTarget:"#el-s",bottomPixels:<?php echo $bottom_pixels; ?>,callback:function(a,b){esUpdate(b)},ceaseFire:function(a){if(current_page>=Math.ceil(total_products/page_limit)){return true}return false}});
<?php } else if ($use_more && $use_more_after == 0){ ?>
$(".el-m").click(function(){$(".el-m").fadeOut(200);esUpdate(function(){if(current_page*page_limit+1<=total_products){$(".el-m").fadeIn(200)}})});$(function(){if(start_page*page_limit<total_products){$(".el-md").show()}});
<?php } else { ?>
(function(a){a.fn.endlessScroll=function(b){var c={bottomPixels:400,fireOnce:true,fireDelay:0,contentTarget:"",callback:function(){return true},resetCounter:function(){return false},ceaseFire:function(){return false},intervalFrequency:250};var b=a.extend({},c,b),d=false,e=0,f=false,g=this,h=a(".endless_scroll_inner_wrap",this),i;a(this).scroll(function(){f=true;g=this});setInterval(function(){if(f){f=false;if(b.ceaseFire.apply(g,[e])===true){return}if(g==document||g==window){if(b.contentTarget!=""&&a(b.contentTarget).length){i=a(b.contentTarget).offset().top+a(b.contentTarget).height()-a(window).height()<=a(window).scrollTop()+b.bottomPixels}else{i=a(document).height()-a(window).height()<=a(window).scrollTop()+b.bottomPixels}}else{if(h.length==0){h=a(g).wrapInner('<div class="endless_scroll_inner_wrap" />').find(".endless_scroll_inner_wrap")}i=h.length>0&&h.height()-a(g).height()<=a(g).scrollTop()+b.bottomPixels}if(i&&(b.fireOnce==false||b.fireOnce==true&&d!=true)){if(b.resetCounter.apply(g)===true){e=0}d=true;e++;if(a.isFunction(b.beforeLoad)){b.beforeLoad.apply(g,[e])}b.callback.apply(g,[e,function(){if(b.fireDelay!==false||b.fireDelay!==0){setTimeout(function(){d=false},b.fireDelay)}else{d=false}}])}}},b.intervalFrequency)}})(jQuery)
var use_more_after=<?php echo $use_more_after; ?>;var auto_load_counter=<?php echo $auto_load_counter; ?>;$(window).endlessScroll({contentTarget:"#el-s",bottomPixels:<?php echo $bottom_pixels; ?>,callback:function(a,b){auto_load_counter++;esUpdate(function(){b.call();if(auto_load_counter>=use_more_after&&current_page*page_limit+1<=total_products){$(".el-m").fadeIn(200)}})},ceaseFire:function(a){if(current_page>=Math.ceil(total_products/page_limit)){return true}if(auto_load_counter>=use_more_after){return true}return false}});$(".el-m").click(function(){$(".el-m").fadeOut(200);esUpdate(function(){auto_load_counter=0})});$(function(){if(start_page*page_limit<total_products){$(".el-m").hide();$(".el-md").show()};if(auto_load_counter>=use_more_after&&current_page*page_limit+1<=total_products){$(".el-m").fadeIn(200)}});
<?php } ?>
$(function(){end=current_page*page_limit>total_products?total_products:current_page*page_limit;$(".el-d").html(text_showing.replace("{start}",(start_page-1)*page_limit+1).replace("{end}",end).replace("{total}",total_products));var a;$(window).scroll(function(){if(a)clearTimeout(a);a=setTimeout(function(){$.each($("#el-s").children(),function(){if($(this).offset().top>=$(window).scrollTop()){if(this.id){current_product=this.id;updatePath();return false}}return true})},500)})})
<?php if ($use_fade_in) { ?>$.fn.fadeInWithDelay=function(){var a=0;return this.each(function(){var b=this;$(this).delay(a).fadeIn(200,function(){$(this).removeAttr("style")});a+=100})};<?php } ?>
<?php if ($use_back_top) { ?>jQuery.fn.topLink=function(a){a=jQuery.extend({min:350,fadeSpeed:"fast",scrollSpeed:"slow",easing:"easeOutQuint"},a);return this.each(function(){var b=$(this);var c=false;var d=false;b.hide();$(window).scroll(function(){if($(window).scrollTop()>=a.min){if(!c&&!d){c=true;b.fadeIn(a.fadeSpeed)}}else{if(c){c=false;b.fadeOut(a.fadeSpeed)}}});b.click(function(){d=true;$("body,html").animate({scrollTop:0},a.scrollSpeed,a.easing,function(){d=false});window.location.hash="";return false})})};$("#back-to-top").topLink();<?php } ?>
<?php if ($use_sticky_footer) { ?>var showing_footer=false;$(window).scroll(function(){if($("#el-oc").length&&$("#el-s").length){if($(window).scrollTop()>$("#el-s").offset().top&&$(window).scrollTop()+$(window).height()<$("#el-oc").offset().top){if(!showing_footer){$("#el-oc-cl").fadeIn();$(".el-c",$("#el-oc-cl")).hide();showing_footer=true}}else{showing_footer=false;$("#el-oc-cl").hide()}}})<?php } ?>
//--></script><?php } ?>
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            function display(view) {
            ]]></search>
            <add><![CDATA[function display(view, update) {
    update = typeof update !== 'undefined' ? true : false;
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace" regex="true"><![CDATA[~\$\('\.product-(list|grid) > div'\)~]]></search>
            <add><![CDATA[$((update) ? '.product-$1 > div[rel!=loaded]' : '.product-$1 > div')]]></add>
        </operation>
    </file>

</modification>